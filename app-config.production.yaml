#scaffolder:

#catalog:

app:
  # Should be the same as backend.baseUrl when using the `app-backend` plugin
  title: Lighthouse Developer Portal
  baseUrl: ${BASE_URL}

auth:
  # see https://backstage.io/docs/tutorials/quickstart-app-auth to know more about enabling auth providers
  providers:
    github:
      production:
        clientId: ${GH_CLIENT_ID}
        clientSecret: ${GH_CLIENT_SECRET}

backend:
  baseUrl: ${BASE_URL}
  listen:
    port: 7007
  csp:
    connect-src: ["'self'", 'http:', 'https:']
  cors:
    origin: ${BASE_URL}
    methods: [GET, POST, PUT, DELETE]
    credentials: true
  cache:
    store: memcache
    connection: ${MEMCACHED_USER}:${MEMCACHED_PASSWORD}@${MEMCACHED_DNS}:11211
  database:
    # config options: https://node-postgres.com/api/client
    client: pg
    connection:
      host: ${POSTGRES_SERVICE_HOST}
      port: ${POSTGRES_SERVICE_PORT}
      user: ${POSTGRES_USER}
      password: ${POSTGRES_PASSWORD}
  reading:
    allow:
      # allow reading evss swagger
      - host: www.ebenefits.va.gov

# integrations:
#   github:
#     - host: github.com
#       apps:
#         - $include: /etc/app-config/app-creds.yaml
proxy:
  '/test':
    target: 'https://example.com'
    changeOrigin: true
  '/qa/docserver':
    target: ${DOCSERVER_BASE_URL_QA}
    changeOrigin: true
    pathRewrite:
      '^/api/proxy/qa/docserver/': '/docserver/'
  '/staging/docserver':
    target: ${DOCSERVER_BASE_URL_STAGING}
    changeOrigin: true
    pathRewrite:
      '^/api/proxy/staging/docserver/': '/docserver/'
  '/prod/docserver':
    target: ${DOCSERVER_BASE_URL_PROD}
    changeOrigin: true
    pathRewrite:
      '^/api/proxy/prod/docserver/': '/docserver/'

# Reference documentation http://backstage.io/docs/features/techdocs/configuration
# Note: After experimenting with basic setup, use CI/CD to generate docs
# and an external cloud storage when deploying TechDocs for production use-case.
# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach
techdocs:
  builder: 'external' # Alternatives - 'external'
  publisher:
    type: 'awsS3' # Alternatives - 'googleGcs' or 'awsS3' or 'azureBlobStorage' or 'openStackSwift'. Read documentation for using alternatives.
    awsS3:
      bucketName: ${AWS_BUCKET_NAME}
  cache:
    ttl: 3600000
    readTimeout: 500
