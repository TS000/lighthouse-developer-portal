name: Update Backstage
on:
  schedule:
    - cron: '0 07 * * *'
  workflow_dispatch:
jobs:
  check-for-existing-update:
    runs-on: ubuntu-latest
    outputs:
      exists: ${{ steps.pr.outputs.exists }}
      url: ${{ steps.pr.outputs.url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Check for existing auto-update PR
        id: pr
        run: |
          exists=$(curl -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/department-of-veterans-affairs/lighthouse-developer-portal/pulls?head=department-of-veterans-affairs:auto-update-backstage)
          url=$(echo $exists | jq .[] | jq .html_url)
          echo ::set-output name=exists::$exists
          echo ::set-output name=url::$url
  link-pr:
    runs-on: ubuntu-latest
    needs: check-for-existing-update
    if: needs.check-for-existing-update.outputs.exists != '[ ]'
    steps:
      - name: Failed to update Backstage
        uses: actions/github-script@v6
        with:
          script: |
            console.log("Failed to Update Backstage - Pull Request already exists: ",${{ needs.check-for-existing-update.outputs.url }})
  update-backstage:
    runs-on: ubuntu-latest
    needs: check-for-existing-update
    if: needs.check-for-existing-update.outputs.exists == '[ ]'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Dependencies
        run: yarn install
      - name: Update Backstage
        run: npm run backstage-update
      - name: Compare & create app versions
        id: compare_versions
        run: |
          mostRecent=$(npx @backstage/create-app --skip-install --version)
          current=$(cat package.json | jq .metadata | jq '."backstage-create-app-version"' | sed 's/"//g')
          echo ::set-output name=current::$current
          echo ::set-output name=mostRecent::$mostRecent
      - name: Format PR body
        id: get-pr-body
        run: |
          body=$(sed -n '/breaking changes/, $p' backstage-update-log.txt)
          body="${body//$'\n'/'%0A'}"
          echo ::set-output name=body::$body
      - name: Set output variables
        id: vars
        run: |
          echo ::set-output name=pr_title::"Update Backstage (auto-generated)"
          echo ::set-output name=date::$(date +'%Y-%m-%d')
      - name: Create PR
        id: create-pr
        uses: peter-evans/create-pull-request@d6d5519d05f5814158ef015b8448f2f74648c421 # pin@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          committer: GitHub <noreply@github.com>
          commit-message: Auto Update for Backstage
          title: ${{ steps.vars.outputs.pr_title }}
          base: main
          branch: auto-update-backstage
          body: |
            Pull Request to Update Backstage (auto-generated)
            - ${{ steps.vars.outputs.date }}
            - [Output Log](https://github.com/department-of-veterans-affairs/lighthouse-developer-portal/blob/auto-update-backstage/backstage-update-log.txt):
                - ${{ steps.get-pr-body.outputs.body }}
            - [Backstage Create-App Change Log](https://github.com/backstage/backstage/blob/master/packages/create-app/CHANGELOG.md)
              - Most Recent Version: ${{ steps.compare_versions.outputs.mostRecent }}
              - Current Version: ${{ steps.compare_versions.outputs.current }}
            - Auto-generated by [create-pull-request][1]
            [1]: https://github.com/peter-evans/create-pull-request
          labels: |
            automated
            Pull Request
            backstage
            update
          reviewers: lighthouse-bandicoot
          draft: false
      - name: Check outputs
        run: |
          echo "Pull Request Number - ${{ steps.create-pr.outputs.pull-request-number }}"
          echo "Pull Request URL - ${{ steps.create-pr.outputs.pull-request-url }}"