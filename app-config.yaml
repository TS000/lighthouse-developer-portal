app:
  title: Lighthouse Developer Portal
  baseUrl: http://127.0.0.1:3000
  version: '0.0.0'
  sha: ${COMMIT_SHA}
  # Support
  support:
    url: https://github.com/department-of-veterans-affairs/lighthouse-developer-portal/issues # Used by common ErrorPage
    items: # Used by common SupportButton component
      - title: Contact Support Team
        icon: github
        links:
          - url: https://github.com/department-of-veterans-affairs/lighthouse-developer-portal/issues
            title: GitHub Issues
  datadogRum:
    clientToken: 'pubf1d9baf385e683e30ed4988a3a00a668'
    applicationId: 5a6a52f9-271e-4715-9482-e85b426e7da9
    site: 'datadoghq.com'
    service: 'lighthouse-developer-portal'
    env: development
    sampleRate: 100
    trackInteractions: true
    defaultPrivacyLevel: 'mask-user-input'
organization:
  name: Lighthouse Developer Portal
permission:
  enabled: true
backend:
  # Randomly generated string used for backend-to-backend Authentication
  # See https://backstage.io/docs/tutorials/backend-to-backend-auth
  auth:
    keys:
      - secret: ${BACKEND_SECRET}
  baseUrl: http://127.0.0.1:7007
  listen:
    port: 7007
  csp:
    connect-src: ["'self'", 'http:', 'https:']
    frame-src:
      - 'DATADOG_SOURCE'
      - 'DATADOG_DASHBOARD_SOURCE'
  cors:
    origin: http://127.0.0.1:3000
    methods: [GET, POST, PUT, DELETE]
    credentials: true
  cache:
    store: memory
  database:
    # config options: https://node-postgres.com/api/client
    client: pg
    connection:
      host: ${POSTGRES_HOST}
      port: 5432
      user: postgres
      password: postgres
  reading:
    allow:
      # allow reading evss swagger
      - host: www.ebenefits.va.gov
    # https://node-postgres.com/features/ssl
    #ssl: require # see https://www.postgresql.org/docs/current/libpq-ssl.html Table 33.1. SSL Mode Descriptions (e.g. require)
    #ca: # if you have a CA file and want to verify it you can uncomment this section
    #$file: <file-path>/ca/server.crt
integrations:
  github:
    - host: github.com
      token: ${GH_TOKEN}
    ### Example for how to add your GitHub Enterprise instance using the API:
    # - host: ghe.example.net
    #   apiBaseUrl: https://ghe.example.net/api/v3
    #   token: ${GHE_TOKEN}
proxy:
  '/test':
    target: 'https://example.com'
    changeOrigin: true
  '/qa/docserver':
    target: ${DOCSERVER_BASE_URL_QA}
    changeOrigin: true
    pathRewrite:
      '^/api/proxy/qa/docserver/': '/docserver/'
  '/staging/docserver':
    target: ${DOCSERVER_BASE_URL_STAGING}
    changeOrigin: true
    pathRewrite:
      '^/api/proxy/staging/docserver/': '/docserver/'
  '/prod/docserver':
    target: ${DOCSERVER_BASE_URL_PROD}
    changeOrigin: true
    pathRewrite:
      '^/api/proxy/prod/docserver/': '/docserver/'
# Reference documentation http://backstage.io/docs/features/techdocs/configuration
# Note: After experimenting with basic setup, use CI/CD to generate docs
# and an external cloud storage when deploying TechDocs for production use-case.
# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach
techdocs:
  builder: 'local' # Alternatives - 'external'
  generator:
    runIn: 'docker'
  publisher:
    type: 'local' # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.
auth:
  # providers: {}
  # see https://backstage.io/docs/tutorials/quickstart-app-auth to know more about enabling auth providers
  environment: development
  providers:
    github:
      development:
        clientId: ${GH_CLIENT_ID}
        clientSecret: ${GH_CLIENT_SECRET}
scaffolder:
  # github:
  #   token: ${GH_TOKEN}
  #   visibility: public # or 'internal' or 'private'
catalog:
  processors:
    githubOrg:
      providers:
        - target: https://github.com
          apiBaseUrl: https://api.github.com
    visibility: public # or 'internal' or 'private'
  rules:
    - allow:
        [
          Component,
          API,
          Resource,
          Group,
          User,
          Template,
          System,
          Domain,
          Location,
        ]
  locations:
    #################### Lighthouse Developer Portal #########################
    # Local Catalog Entities
    - type: url
      target: https://github.com/department-of-veterans-affairs/lighthouse-developer-portal-catalog-entries/blob/main/env/catalog-local.yaml
